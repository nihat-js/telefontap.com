// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int       @id @default(autoincrement())
  name                  String?
  email                 String    @unique
  phoneNumber           String?
  phoneNumberVerifiedAt DateTime?
  emailVerifiedAt       DateTime?
  balance               Float     @default(0)
  profilePicture        String?
  lastLogin             DateTime?
  lastPasswordChange    DateTime?
  status                String    @default("ACTIVE")
  twoFactorEnabled      Boolean   @default(false)

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  Wishlist     Wishlist[]
  Notification Notification[]
}

model Phone {
  id          Int    @id @default(autoincrement())
  brand       String
  model       String
  brandId     Int?
  modelId     Int?
  storage     String
  price       Float
  description String
  authorId    Int

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  deletedAt DateTime?
  Wishlist  Wishlist[]
}

model Brand {
  id   Int    @id @default(autoincrement())
  name String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Devvices {
  id   Int    @id @default(autoincrement())
  name String

  brand   String?
  brandId Int

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Wishlist {
  id      Int @id @default(autoincrement())
  userId  Int
  phoneId Int

  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  phone Phone @relation(fields: [phoneId], references: [id])
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
