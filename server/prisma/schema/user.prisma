model User {
  id                    Int       @id @default(autoincrement())
  name                  String?
  email                 String    @unique
  phoneNumber           String?   @unique
  password              String
  emailVerifiedAt       DateTime?
  phoneNumberVerifiedAt DateTime?
  balance               Float     @default(0)
  profilePicture        String?
  lastLogin             DateTime?
  lastPasswordChange    DateTime?
  status                String    @default("ACTIVE")
  twoFactorEnabled      Boolean   @default(false)

  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  deletedAt         DateTime?
  chats             UserChat[]
  Session           Session[]
  Favorite          Favorite[]
  Notification      Notification[]
  ActvitiyLog       ActvitiyLog[]
  SearchHistory     SearchHistory[]
  SupportTicket     SupportTicket[]
  VerificationCode  VerificationCode[]
  Feedback          Feedback[]
  ItemImage         ItemImage[]
  // Transaction      Transaction[]
  Item              Item[]
  UserProfileImage  UserProfileImage[]
  UserUploadedImage UserUploadedImage[]
}

model VerificationCode {
  id        Int              @id @default(autoincrement())
  userId    Int
  code      String
  type      VerificationType
  expiresAt DateTime

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user User @relation(fields: [userId], references: [id])
}

enum VerificationType {
  CONFIRM_BY_EMAIL
  CONFIRM_BY_PHONE
  RESET_BY_EMAIL
  RESET_BY_PHONE
}

model Session {
  id          Int      @id @default(autoincrement())
  userId      Int
  ipAddress   String
  token       String   @unique // Token to identify the session // remove @unique
  expiresAt   DateTime // Expiration date for the session
  browserInfo String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user User @relation(fields: [userId], references: [id])
}

model ActvitiyLog {
  id     Int    @id @default(autoincrement())
  userId Int
  action String // e.g., "LOGIN", "PURCHASE", "LISTING_CREATED"

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  user      User      @relation(fields: [userId], references: [id])
}

model Notification {
  id       Int              @id @default(autoincrement())
  userId   Int
  message  String
  isRead   Boolean          @default(false)
  type     NotificationType
  metadata String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  User User @relation(fields: [userId], references: [id])
}

enum NotificationType {
  AD
  CAMPAIGN
}

model SearchHistory {
  id         Int      @id @default(autoincrement())
  userId     Int
  searchTerm String
  createdAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model UserProfileImage {
  id        Int      @id @default(autoincrement())
  userId    Int
  url       String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model UserUploadedImage {
  id     Int    @id @default(autoincrement())
  url    String
  userId Int

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
